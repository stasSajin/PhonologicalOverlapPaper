library(ggplot2)
library(dplyr)
library(parallel)
library(doParallel)
library(tidyr)
library(gridExtra)
library(eyetrackingR)
library(plyr)
setwd("C:/Users/Stas/Dropbox/Overlap/All3/Data Analysis/OverlapAll3 Divergence Analyses/Experiment1")
deletedTrials<-read.csv("delete.csv")
Part1 <- read.csv("Exp1Part1.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part2 <- read.csv("Exp1Part2.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
EyeData<-rbind(Part1, Part2)
levels(EyeData$RECORDING_SESSION_LABEL)
sub11spe2<-EyeData %>% filter(RECORDING_SESSION_LABEL=="11spe2")
write.csv(sub11spe2,"sub11spe2.csv")
EyeData<-EyeData %>% filter(RECORDING_SESSION_LABEL!="11spe2")
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="1sse1" & EyeData$TRIAL_INDEX==50),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="12spe1" & EyeData$TRIAL_INDEX==73),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="7spe1" & EyeData$TRIAL_INDEX==38),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="4tle1" & EyeData$TRIAL_INDEX==53),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9spe1" & EyeData$TRIAL_INDEX==87),]
EyeData[is.na(EyeData)] <- 0
EyeData$RESPONSE_RT<-EyeData$MOUSE_TIME-EyeData$DISPLAY_TIME
dim(EyeData)
EyeData<-EyeData %>% select (1:16)
colnames(EyeData)[1] <- "Subject"
names(EyeData)
str(EyeData)
EyeData <- EyeData %>% filter(trialtype=="Exp")
SubjectAccuracy<- EyeData %>% group_by(Subject) %>%
summarise(MeanAccuracy=mean(RESPONSE_ACC)) %>%
arrange(MeanAccuracy)
SubjectAccuracy
mean(SubjectAccuracy$MeanAccuracy)
CorrectEyeData<-EyeData %>% filter(RESPONSE_ACC==1)
nrow(EyeData)-nrow(CorrectEyeData) #32 rows get deleted, which corresponds to 5 incorrect trials
CorrectEyeData$Fststart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)), 0)
CorrectEyeData$Fstend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_END_TIME)), 0)
CorrectEyeData$Secstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)), 0)
CorrectEyeData$Secend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_END_TIME)), 0)
CorrectEyeData$Thirdstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)), 0)
CorrectEyeData$Thirdend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_END_TIME)), 0)
time <- seq(0, 6000, by=25)
tmatrix <- matrix(nrow=nrow(CorrectEyeData), ncol=length(time))
dim(tmatrix)
registerDoParallel(3)
for(i in 1:nrow(tmatrix)) {
for(j in 1:length(time)) {
tmatrix[i,j] <-  ifelse(CorrectEyeData$Fststart[i] < time[j] &
CorrectEyeData$Fstend[i] > time[j] |CorrectEyeData$Secstart[i] <
time[j] & CorrectEyeData$Secend[i] > time[j] | CorrectEyeData$Thirdstart[i]
< time[j] & CorrectEyeData$Thirdend[i]>time[j], 1,0)
}
}
CleanData <- cbind(CorrectEyeData, data.frame(tmatrix))
colnames(CleanData)[23:263] <- seq(0, 6000, by=25)
CleanData <- CleanData[, -c(2:8,10,11,12,13,14, 17:22)]
CleanData<- CleanData %>% gather(time,value,5:245) %>%
filter(trialtype=="Experimental") %>% select(-c(trialtype))
CleanData <- cbind(CorrectEyeData, data.frame(tmatrix))
colnames(CleanData)[23:263] <- seq(0, 6000, by=25)
CleanData <- CleanData[, -c(2:8,10,11,12,13,14, 17:22)]
deletedTrials<-read.csv("delete.csv")
Part1 <- read.csv("Exp1Part1.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part2 <- read.csv("Exp1Part2.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
EyeData<-rbind(Part1, Part2)
levels(EyeData$RECORDING_SESSION_LABEL)
sub11spe2<-EyeData %>% filter(RECORDING_SESSION_LABEL=="11spe2")
write.csv(sub11spe2,"sub11spe2.csv")
EyeData<-EyeData %>% filter(RECORDING_SESSION_LABEL!="11spe2")
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="1sse1" & EyeData$TRIAL_INDEX==50),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="12spe1" & EyeData$TRIAL_INDEX==73),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="7spe1" & EyeData$TRIAL_INDEX==38),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="4tle1" & EyeData$TRIAL_INDEX==53),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9spe1" & EyeData$TRIAL_INDEX==87),]
EyeData[is.na(EyeData)] <- 0
EyeData$RESPONSE_RT<-EyeData$MOUSE_TIME-EyeData$DISPLAY_TIME
dim(EyeData)
EyeData<-EyeData %>% select (1:16)
colnames(EyeData)[1] <- "Subject"
names(EyeData)
str(EyeData)
EyeData <- EyeData %>% filter(trialtype=="Exp")
SubjectAccuracy<- EyeData %>% group_by(Subject) %>%
summarise(MeanAccuracy=mean(RESPONSE_ACC)) %>%
arrange(MeanAccuracy)
SubjectAccuracy
mean(SubjectAccuracy$MeanAccuracy)
CorrectEyeData<-EyeData %>% filter(RESPONSE_ACC==1)
nrow(EyeData)-nrow(CorrectEyeData) #32 rows get deleted, which corresponds to 5 incorrect trials
nrow(EyeData)-nrow(CorrectEyeData) #32 rows get deleted, which corresponds to 5 incorrect trials
CorrectEyeData$Fststart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)), 0)
CorrectEyeData$Fstend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_END_TIME)), 0)
CorrectEyeData$Secstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)), 0)
CorrectEyeData$Secend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_END_TIME)), 0)
CorrectEyeData$Thirdstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)), 0)
CorrectEyeData$Thirdend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_END_TIME)), 0)
time <- seq(0, 6000, by=25)
tmatrix <- matrix(nrow=nrow(CorrectEyeData), ncol=length(time))
dim(tmatrix)
registerDoParallel(3)
for(i in 1:nrow(tmatrix)) {
for(j in 1:length(time)) {
tmatrix[i,j] <-  ifelse(CorrectEyeData$Fststart[i] < time[j] &
CorrectEyeData$Fstend[i] > time[j] |CorrectEyeData$Secstart[i] <
time[j] & CorrectEyeData$Secend[i] > time[j] | CorrectEyeData$Thirdstart[i]
< time[j] & CorrectEyeData$Thirdend[i]>time[j], 1,0)
}
}
CleanData <- cbind(CorrectEyeData, data.frame(tmatrix))
colnames(CleanData)[23:263] <- seq(0, 6000, by=25)
CleanData <- CleanData[, -c(2:8,10,11,12,13,14, 17:22)]
CleanData<- CleanData %>% gather(time,value,5:245)
CleanData$time<-as.numeric(CleanData$time)
CleanDataSubset<-CleanData %>% filter(time>=1800 & time <=3200)
CleanDataSubset$time<-CleanDataSubset$time-1800
View(CleanData)
levels(CleanData$IA_LABEL)
table(CleanData$IA_LABEL)
CleanDataSubset$time<-CleanDataSubset$time-1800
CleanData$time<-as.numeric(CleanData$time)
CleanDataSubset<-CleanData %>% filter(time>=1800 & time <=3200)
CleanDataSubset$time<-CleanDataSubset$time-1800
testSubset<- ddply(CleanDataSubset, c("Subject", "TRIAL_INDEX","time"),
transform, TrackLoss=sum(value))
View(CleanDataSubset)
CleanData <- cbind(CorrectEyeData, data.frame(tmatrix))
colnames(CleanData)[23:263] <- seq(0, 6000, by=25)
names(CleanData)
CleanData <- CleanData[, -c(2:8,10,11,13,14, 17:22)]
CleanData<- CleanData %>% gather(time,value,5:245)
CleanData$time<-as.numeric(CleanData$time)
CleanDataSubset<-CleanData %>% filter(time>=1800 & time <=3200)
CleanDataSubset$time<-CleanDataSubset$time-1800
testSubset<- ddply(CleanDataSubset, c("Subject", "TRIAL_INDEX","time"),
transform, TrackLoss=sum(value))
str(CleanData)
View(CleanData)
CleanData <- cbind(CorrectEyeData, data.frame(tmatrix))
colnames(CleanData)[23:263] <- seq(0, 6000, by=25)
CleanData <- CleanData[, -c(2:8,10,11,13,14, 17:22)]
View(CleanData)
CleanData<- CleanData %>% gather(time,value,6:246)
CleanData$time<-as.numeric(CleanData$time)
CleanDataSubset<-CleanData %>% filter(time>=1800 & time <=3200)
CleanDataSubset$time<-CleanDataSubset$time-1800
testSubset<- ddply(CleanDataSubset, c("Subject", "TRIAL_INDEX","time"),
transform, TrackLoss=sum(value))
View(testSubset)
str(testSubset)
levels(testSubset$TRIAL_INDEX)
levels(testSubset$IA_LABEL)
testSubset2<-testSubset %>% filter(!c(value==0 & TrackLoss==1)) %>%
filter(!c(IA_LABEL=="CompetitorHigh " & TrackLoss==0)) %>%
filter(!c(IA_LABEL=="CompetitorLow " & TrackLoss==0)) %>%
filter(!c(IA_LABEL=="UNREL2_IA " & TrackLoss==0))
View(testSubset2)
namevector<-c("Target","CompetitorHigh","CompetitorLow","Distractor")
testSubset2[,namevector]<-NA
testSubset3<- testSubset2 %>% mutate(
Target=ifelse(c(IA_LABEL=="TARGET_IA " & TrackLoss==1),TRUE,FALSE),
Competitor=ifelse(c(IA_LABEL=="COMPET_IA " & TrackLoss==1),TRUE,FALSE),
Distractor=ifelse(c(IA_LABEL=="UNREL1_IA " & TrackLoss==1),TRUE,FALSE),
Distractor=ifelse(c(IA_LABEL=="UNREL2_IA " & TrackLoss==1),TRUE,FALSE),
TrackLoss=ifelse(TrackLoss==0,TRUE,FALSE))
levels(testSubset$IA_LABEL)
testSubset3<- testSubset2 %>% mutate(
Target=ifelse(c(IA_LABEL=="TARGET_IA " & TrackLoss==1),TRUE,FALSE),
Competitor=ifelse(c(IA_LABEL=="CompetitorHigh " & TrackLoss==1),TRUE,FALSE),
Distractor=ifelse(c(IA_LABEL=="CompetitorLow " & TrackLoss==1),TRUE,FALSE),
Distractor=ifelse(c(IA_LABEL=="UNREL2_IA " & TrackLoss==1),TRUE,FALSE),
TrackLoss=ifelse(TrackLoss==0,TRUE,FALSE))
View(testSubset3)
testSubset3<- testSubset2 %>% mutate(
Target=ifelse(c(IA_LABEL=="TARGET_IA " & TrackLoss==1),TRUE,FALSE),
CompetitorHigh=ifelse(c(IA_LABEL=="CompetitorHigh " & TrackLoss==1),TRUE,FALSE),
CompetitorLow=ifelse(c(IA_LABEL=="CompetitorLow " & TrackLoss==1),TRUE,FALSE),
Distractor=ifelse(c(IA_LABEL=="UNREL2_IA " & TrackLoss==1),TRUE,FALSE),
TrackLoss=ifelse(TrackLoss==0,TRUE,FALSE))
View(testSubset3)
EyeData <- make_eyetrackingr_data(testSubset3,
participant_column = "Subject",
trial_column = "TRIAL_INDEX",
time_column = "time",
trackloss_column = "TrackLoss",
aoi_columns = c('Target','CompetitorHigh','CompetitorLow','Distractor'),
treat_non_aoi_looks_as_missing = FALSE)
View(testSubset3)
response_time2 <- make_time_sequence_data(EyeData,
time_bin_size = 25,
aois = c('Target','CompetitorHigh','CompetitorLow','Distractor'),
summarize_by = "Subject")
response_time2$AOI<-as.factor(response_time2$AOI)
Filtered<-response_time2 %>% filter(AOI=="CompetitorHigh" | AOI=="CompetitorLow")
Filtered$AOI<-as.factor(as.character(Filtered$AOI))
Filtered$AOI<-relevel(Filtered$AOI, "CompetitorHigh")
df_timeclust <- make_time_cluster_data(Filtered,
test= "t.test", paired=TRUE,
predictor_column = "AOI",
threshold = -2.09)
tstat<-plot(df_timeclust) +  ylab("T-Statistic") + theme_light()
summary(df_timeclust)
tstat
registerDoParallel(3)
clust_analysis <- analyze_time_clusters(df_timeclust, samples=1000, within_subj=TRUE, paired=TRUE) #
distribution<-plot(clust_analysis) + theme_light()
distribution
summary(clust_analysis)
png(filename="HighvsLowCompExp1.png",width=900,height=524)
grid.arrange(tstat, distribution, nrow=1, ncol=2)
dev.off()
setwd("C:/Users/Stas/Dropbox/Overlap/All3/Data Analysis/OverlapAll3 Divergence Analyses/Experiment2")
setwd("C:/Users/Stas/Dropbox/Overlap/All3/Data Analysis/OverlapAll3 Divergence Analyses/Experiment2")
deletedTrials<-read.csv("deleted.csv")
Part1 <- read.csv("Exp2Part1.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part2 <- read.csv("Exp2Part2.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part3 <- read.csv("Exp2Part3.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
sub11spe2 <- read.csv("sub11spe2.csv", na.strings = c("NA"))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
EyeData<-rbind(Part1, Part2, Part3, sub11spe2)
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="17spe2" & EyeData$TRIAL_INDEX==45),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="15spe2" & EyeData$TRIAL_INDEX==85),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9sre2" & EyeData$TRIAL_INDEX==21),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="11spe2" & EyeData$TRIAL_INDEX==11),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="1tle2" & EyeData$TRIAL_INDEX==69),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9spe2" & EyeData$TRIAL_INDEX==18),]
EyeData[is.na(EyeData)] <- 0
#Calculate RT from the display onset until the mouse click is made
EyeData$RESPONSE_RT<-EyeData$MOUSE_TIME-EyeData$DISPLAY_TIME
#check the dimentions of the dataset
dim(EyeData)
#remove the MOUSE_TIME and DISPLAY_TIME variables
EyeData<-EyeData %>% select (1:16)
#rename the RECORDING_SESSION_LABEL into Subject
colnames(EyeData)[1] <- "Subject"
#examine colum names
names(EyeData)
str(EyeData)
EyeData <- EyeData %>% filter(trialtype=="Exp")
SubjectAccuracy<- EyeData %>% group_by(Subject) %>%
summarise(MeanAccuracy=mean(RESPONSE_ACC)) %>%
arrange(MeanAccuracy)
SubjectAccuracy
mean(SubjectAccuracy$MeanAccuracy)
CorrectEyeData<-EyeData %>% filter(RESPONSE_ACC==1)
nrow(EyeData)-nrow(CorrectEyeData) #28 rows get deleted, which corresponds to 7 incorrect trials
CorrectEyeData$Fststart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)), 0)
CorrectEyeData$Fstend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_END_TIME)), 0)
CorrectEyeData$Secstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)), 0)
CorrectEyeData$Secend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_END_TIME)), 0)
CorrectEyeData$Thirdstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)), 0)
CorrectEyeData$Thirdend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_END_TIME)), 0)
time <- seq(0, 6000, by=25)
tmatrix <- matrix(nrow=nrow(CorrectEyeData), ncol=length(time))
dim(tmatrix)
registerDoParallel(3)
for(i in 1:nrow(tmatrix)) {
for(j in 1:length(time)) {
tmatrix[i,j] <-  ifelse(CorrectEyeData$Fststart[i] < time[j] &
CorrectEyeData$Fstend[i] > time[j] |CorrectEyeData$Secstart[i] <
time[j] & CorrectEyeData$Secend[i] > time[j] | CorrectEyeData$Thirdstart[i]
< time[j] & CorrectEyeData$Thirdend[i]>time[j], 1,0)
}
}
CleanData <- cbind(CorrectEyeData, data.frame(tmatrix))
colnames(CleanData)[23:263] <- seq(0, 6000, by=25)
CleanData <- CleanData[, -c(2:8,10,11,13,14, 17:22)]
str(CleanData)
names(CleanData)
CleanData<- CleanData %>% gather(time,value,6:246)
View(CleanData)
CleanData$time<-as.numeric(CleanData$time)
CleanDataSubset<-CleanData %>% filter(time>=1800 & time <=3200)
CleanDataSubset$time<-CleanDataSubset$time-1800
View(CleanDataSubset)
testSubset<- ddply(CleanDataSubset, c("Subject", "TRIAL_INDEX","time"),
transform, TrackLoss=sum(value))
str(testSubset)
levels(testSubset$IA_LABEL)
testSubset2<-testSubset %>% filter(!c(value==0 & TrackLoss==1)) %>%
filter(!c(IA_LABEL=="CompetitorHigh " & TrackLoss==0)) %>%
filter(!c(IA_LABEL=="CompetitorLow " & TrackLoss==0)) %>%
filter(!c(IA_LABEL=="UNREL2_IA " & TrackLoss==0))
namevector<-c("Target","CompetitorHigh","CompetitorLow","Distractor")
testSubset2[,namevector]<-NA
testSubset3<- testSubset2 %>% mutate(
Target=ifelse(c(IA_LABEL=="TARGET_IA " & TrackLoss==1),TRUE,FALSE),
CompetitorHigh=ifelse(c(IA_LABEL=="CompetitorHigh " & TrackLoss==1),TRUE,FALSE),
CompetitorLow=ifelse(c(IA_LABEL=="CompetitorLow " & TrackLoss==1),TRUE,FALSE),
Distractor=ifelse(c(IA_LABEL=="UNREL2_IA " & TrackLoss==1),TRUE,FALSE),
TrackLoss=ifelse(TrackLoss==0,TRUE,FALSE))
EyeData <- make_eyetrackingr_data(testSubset3,
participant_column = "Subject",
trial_column = "TRIAL_INDEX",
time_column = "time",
trackloss_column = "TrackLoss",
aoi_columns = c('Target','CompetitorHigh','CompetitorLow','Distractor'),
treat_non_aoi_looks_as_missing = FALSE)
Part1 <- read.csv("Exp2Part1.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part2 <- read.csv("Exp2Part2.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part3 <- read.csv("Exp2Part3.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
sub11spe2 <- read.csv("sub11spe2.csv", na.strings = c("NA"))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
EyeData<-rbind(Part1, Part2, Part3)
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="17spe2" & EyeData$TRIAL_INDEX==45),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="15spe2" & EyeData$TRIAL_INDEX==85),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9sre2" & EyeData$TRIAL_INDEX==21),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="11spe2" & EyeData$TRIAL_INDEX==11),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="1tle2" & EyeData$TRIAL_INDEX==69),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9spe2" & EyeData$TRIAL_INDEX==18),]
EyeData[is.na(EyeData)] <- 0
EyeData$RESPONSE_RT<-EyeData$MOUSE_TIME-EyeData$DISPLAY_TIME
dim(EyeData)
EyeData<-EyeData %>% select (1:16)
colnames(EyeData)[1] <- "Subject"
names(EyeData)
str(EyeData)
EyeData <- EyeData %>% filter(trialtype=="Exp")
SubjectAccuracy<- EyeData %>% group_by(Subject) %>%
summarise(MeanAccuracy=mean(RESPONSE_ACC)) %>%
arrange(MeanAccuracy)
SubjectAccuracy
mean(SubjectAccuracy$MeanAccuracy)
CorrectEyeData<-EyeData %>% filter(RESPONSE_ACC==1)
#number of rows deleted
nrow(EyeData)-nrow(CorrectEyeData) #28 rows get deleted, which corresponds to 7 incorrect trials
```
CorrectEyeData$Fststart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)), 0)
CorrectEyeData$Fstend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_END_TIME)), 0)
CorrectEyeData$Secstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)), 0)
CorrectEyeData$Secend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_END_TIME)), 0)
CorrectEyeData$Thirdstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)), 0)
CorrectEyeData$Thirdend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_END_TIME)), 0)
time <- seq(0, 6000, by=25)
tmatrix <- matrix(nrow=nrow(CorrectEyeData), ncol=length(time))
dim(tmatrix)
registerDoParallel(3)
for(i in 1:nrow(tmatrix)) {
for(j in 1:length(time)) {
tmatrix[i,j] <-  ifelse(CorrectEyeData$Fststart[i] < time[j] &
CorrectEyeData$Fstend[i] > time[j] |CorrectEyeData$Secstart[i] <
time[j] & CorrectEyeData$Secend[i] > time[j] | CorrectEyeData$Thirdstart[i]
< time[j] & CorrectEyeData$Thirdend[i]>time[j], 1,0)
}
}
CleanData <- cbind(CorrectEyeData, data.frame(tmatrix))
colnames(CleanData)[23:263] <- seq(0, 6000, by=25)
CleanData <- CleanData[, -c(2:8,10,11,13,14, 17:22)]
CleanData<- CleanData %>% gather(time,value,6:246)
CleanData$time<-as.numeric(CleanData$time)
CleanDataSubset<-CleanData %>% filter(time>=1800 & time <=3200)
CleanDataSubset$time<-CleanDataSubset$time-1800
testSubset<- ddply(CleanDataSubset, c("Subject", "TRIAL_INDEX","time"),
transform, TrackLoss=sum(value))
testSubset2<-testSubset %>% filter(!c(value==0 & TrackLoss==1)) %>%
filter(!c(IA_LABEL=="CompetitorHigh " & TrackLoss==0)) %>%
filter(!c(IA_LABEL=="CompetitorLow " & TrackLoss==0)) %>%
filter(!c(IA_LABEL=="UNREL2_IA " & TrackLoss==0))
namevector<-c("Target","CompetitorHigh","CompetitorLow","Distractor")
testSubset2[,namevector]<-NA
testSubset3<- testSubset2 %>% mutate(
Target=ifelse(c(IA_LABEL=="TARGET_IA " & TrackLoss==1),TRUE,FALSE),
CompetitorHigh=ifelse(c(IA_LABEL=="CompetitorHigh " & TrackLoss==1),TRUE,FALSE),
CompetitorLow=ifelse(c(IA_LABEL=="CompetitorLow " & TrackLoss==1),TRUE,FALSE),
Distractor=ifelse(c(IA_LABEL=="UNREL2_IA " & TrackLoss==1),TRUE,FALSE),
TrackLoss=ifelse(TrackLoss==0,TRUE,FALSE))
EyeData <- make_eyetrackingr_data(testSubset3,
participant_column = "Subject",
trial_column = "TRIAL_INDEX",
time_column = "time",
trackloss_column = "TrackLoss",
aoi_columns = c('Target','CompetitorHigh','CompetitorLow','Distractor'),
treat_non_aoi_looks_as_missing = FALSE)
response_time2 <- make_time_sequence_data(EyeData,
time_bin_size = 25,
aois = c('Target','CompetitorHigh','CompetitorLow','Distractor'),
summarize_by = "Subject")
response_time2$AOI<-as.factor(response_time2$AOI)
Filtered<-response_time2 %>% filter(AOI=="CompetitorHigh" | AOI=="CompetitorLow")
Filtered$AOI<-as.factor(as.character(Filtered$AOI))
Filtered$AOI<-relevel(Filtered$AOI, "CompetitorHigh")
df_timeclust <- make_time_cluster_data(Filtered,
test= "t.test", paired=TRUE,
predictor_column = "AOI",
threshold = -2.09)
tstat<-plot(df_timeclust) +  ylab("T-Statistic") + theme_light()
summary(df_timeclust)
tstat
registerDoParallel(3)
clust_analysis <- analyze_time_clusters(df_timeclust, samples=10000, within_subj=TRUE, paired=TRUE) #
distribution<-plot(clust_analysis) + theme_light()
library(ggplot2)
library(dplyr)
library(parallel)
library(doParallel)
library(tidyr)
library(gridExtra)
library(eyetrackingR)
library(plyr)
deletedTrials<-read.csv("deleted.csv")
Part1 <- read.csv("Exp2Part1.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part2 <- read.csv("Exp2Part2.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part3 <- read.csv("Exp2Part3.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
sub11spe2 <- read.csv("sub11spe2.csv", na.strings = c("NA"))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
EyeData<-rbind(Part1, Part2, Part3)
EyeData<-rbind(Part1, Part2, Part3)
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="17spe2" & EyeData$TRIAL_INDEX==45),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="15spe2" & EyeData$TRIAL_INDEX==85),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9sre2" & EyeData$TRIAL_INDEX==21),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="11spe2" & EyeData$TRIAL_INDEX==11),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="1tle2" & EyeData$TRIAL_INDEX==69),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9spe2" & EyeData$TRIAL_INDEX==18),]
EyeData[is.na(EyeData)] <- 0
#Calculate RT from the display onset until the mouse click is made
EyeData$RESPONSE_RT<-EyeData$MOUSE_TIME-EyeData$DISPLAY_TIME
#check the dimentions of the dataset
dim(EyeData)
#remove the MOUSE_TIME and DISPLAY_TIME variables
EyeData<-EyeData %>% select (1:16)
#rename the RECORDING_SESSION_LABEL into Subject
colnames(EyeData)[1] <- "Subject"
#examine colum names
names(EyeData)
str(EyeData)
EyeData <- EyeData %>% filter(trialtype=="Exp")
SubjectAccuracy<- EyeData %>% group_by(Subject) %>%
summarise(MeanAccuracy=mean(RESPONSE_ACC)) %>%
arrange(MeanAccuracy)
SubjectAccuracy
mean(SubjectAccuracy$MeanAccuracy)
CorrectEyeData<-EyeData %>% filter(RESPONSE_ACC==1)
#number of rows deleted
nrow(EyeData)-nrow(CorrectEyeData) #28 rows get deleted, which corresponds to 7 incorrect trials
CorrectEyeData$Fststart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)), 0)
CorrectEyeData$Fstend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_FIRST_RUN_END_TIME)), 0)
CorrectEyeData$Secstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)), 0)
CorrectEyeData$Secend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_SECOND_RUN_END_TIME)), 0)
CorrectEyeData$Thirdstart <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)), 0)
CorrectEyeData$Thirdend <- ifelse(as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_START_TIME)) > 0, as.numeric(as.character(CorrectEyeData$IA_THIRD_RUN_END_TIME)), 0)
time <- seq(0, 6000, by=25)
tmatrix <- matrix(nrow=nrow(CorrectEyeData), ncol=length(time))
dim(tmatrix)
for(i in 1:nrow(tmatrix)) {
for(j in 1:length(time)) {
tmatrix[i,j] <-  ifelse(CorrectEyeData$Fststart[i] < time[j] &
CorrectEyeData$Fstend[i] > time[j] |CorrectEyeData$Secstart[i] <
time[j] & CorrectEyeData$Secend[i] > time[j] | CorrectEyeData$Thirdstart[i]
< time[j] & CorrectEyeData$Thirdend[i]>time[j], 1,0)
}
}
CleanData <- cbind(CorrectEyeData, data.frame(tmatrix))
colnames(CleanData)[23:263] <- seq(0, 6000, by=25)
setwd("C:/Users/Stas/Dropbox/Overlap/All3/Data Analysis/OverlapAll3 Divergence Analyses/Experiment2")
setwd("C:/Users/Stas/Dropbox/Overlap/All3/Data Analysis/OverlapAll3 Divergence Analyses/Experiment2")
setwd("C:/Users/Stas/Dropbox/Overlap/All3/Data Analysis/OverlapAll3 Divergence Analyses/Experiment2")
setwd("C:/Users/Stas/Dropbox/Overlap/All3/Data Analysis/OverlapAll3 Divergence Analyses/Experiment2")
deletedTrials<-read.csv("deleted.csv")
Part1 <- read.csv("Exp2Part1.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part2 <- read.csv("Exp2Part2.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
Part3 <- read.csv("Exp2Part3.csv", na.strings = c("."))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
sub11spe2 <- read.csv("sub11spe2.csv", na.strings = c("NA"))[,c('RECORDING_SESSION_LABEL', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_START_TIME', 'IA_FIRST_RUN_END_TIME', 'IA_SECOND_RUN_START_TIME', 'IA_SECOND_RUN_END_TIME', 'IA_THIRD_RUN_START_TIME', 'IA_THIRD_RUN_END_TIME', 'IA_LABEL', 'RESPONSE_ACC', 'IA_DWELL_TIME', 'TRIAL_INDEX', 'target', 'RESPONSE_RT', 'trialtype','oldnewitem', 'MOUSE_TIME','DISPLAY_TIME')]
EyeData<-rbind(Part1, Part2, Part3, sub11spe2)
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="17spe2" & EyeData$TRIAL_INDEX==45),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="15spe2" & EyeData$TRIAL_INDEX==85),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9sre2" & EyeData$TRIAL_INDEX==21),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="11spe2" & EyeData$TRIAL_INDEX==11),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="1tle2" & EyeData$TRIAL_INDEX==69),]
EyeData<-EyeData[!c(EyeData$RECORDING_SESSION_LABEL=="9spe2" & EyeData$TRIAL_INDEX==18),]
